一、函数

	函数是什么
		函数就是一个盛放代码的容器
		函数内的一组代码都是为了来实现某一特定功能的,称之为一组代码块/函数体代码
		
		调用函数可以直接触发函数体代码的运行
		
		一个函数------》实现某一特定功能的工具
	
	
	为何要用函数
		不用函数来组织代码的问题有：
			1、代码冗余（重复代码）
			2、可维护、可扩展性很差
			3、可读性很差
	
	如何用函数
		先定义：（定义函数发生的事情与定义变量发生的事情类似）
			无参函数
				格式1：
				function 函数名() { echo 111;echo 222;echo 333 }
				function f1() { 
				    echo 111
					echo 222
					echo 333 
				}
				格式2：
				f2() { 
				    echo 111
					echo 222
					echo 333 
				}
				格式3：
				function f3 { 
				    echo 111
					echo 222
					echo 333 
				}
							
			
			有参函数
				定义格式也是上面三种形式，只不过有参函数内部会用
				$1、$2、$3....${10} ${11}...接受传入的位置参数
				
				function f4() { 
				    echo "======" $1
				    echo "======" $2
				    echo "======" $3
					
				}
		
		后调用（调用函数会触发函数代码的运行）
			无参：
				f1
				f2
				f3
		
			有参
				f4 111 222 333 444 555
				
		
		函数的返回值：
			1、什么是函数返回值
				如果把 一个函数当成一座工厂
					函数的参数-----》给工厂传的原材料
					
					函数的返回值---》工厂流水线产出的产品/结果
									
			
			2、为何要有返回值
				我们需要拿到函数的结果做二次的加工处理，那么函数就必须要有返回值
								
			
			3、如何控制函数的返回值
			
				return 只用于返回函数的运行状态（真、假）
					注意：
						1、函数内可以有多个return，但只要执行一次return
						整个函数就会立即结束，并且把return后的值当做运行的最终状态返回
						
						return后什么都不写，默认返回状态码是0，代表真
						
			
						2、return返回值的范围0-255
				
				
						3、函数内没有return，那么函数运行的状态码
						以函数体内最后一步执行的代码的状态码为准
			
			
				用echo来输出
					用$(函数名)去获取echo的结果
						
			
		变量的作用域：
			变量的作用域指的是变量可以被访问到的范围
			
				1、局部作用域
					含义：在函数内用local关键字声明的变量
					特点：只能在函数内访问到，别的地方都看不到
				
				
				
				2、全局作用域
					含义：在整个bash进程里都能看得见，每个bash进程都有一个自己的全局作用域
					定义：
						直接定义的变量默认就是全局作用域（包含在函数内定义的--只要不加local关键字的都是）
						
					强调：
						全局作用域是整个bash进程级别
				
				
				3、环境作用域（环境变量）
					定义：export xxx=1  
					特点：环境变量可以遗传给子子孙孙进程
					
					注意：
						1、只能父传子、不能倒着来
						2、两个没有任何关系的进程export无效
						3、export定义的变量都是临时的
				
				4、系统级别（加入配置文件，各个地方都会加载）
					结合进入shell环境必须加载的哪些脚本文件
					将export xxx=1 放到这些脚本文件中
					
					实现的效果：相当于整个系统级别都能看得见
		
		
		
				整体的访问优先级：局部作用域>全局作用域>父进程>父父进程
